/******************************************************************
 * HCL Confidential
 *
 * Copyright HCL Technologies Ltd. 2019 All rights reserved.
 *
 *******************************************************************
 */

/*
 * This file contains all globally applicable @mixins
 */

// MEDIA QUERIES
@mixin respond-to($breakpoint) {
    @if $breakpoint==phone {
        @media (min-width: #{$mobile-width}) and (max-width: #{$tablet-width - 1px}) {
            @content;
        }
    }

    @else if $breakpoint==tablet {
        @media (min-width: #{$tablet-width}) and (max-width: #{$desktop-width - 1px}) {
            @content;
        }
    }

    @else if $breakpoint==desktop {
        @media (min-width: #{$desktop-width}) {
            @content;
        }
    }
}

// GRID SYSTEMS
@mixin generate-row {
    display: flex;
    flex-wrap: wrap;
    margin-right: -$gutter;
    margin-left: -$gutter;
}

@mixin generate-col($size, $columns: $grid-columns) {
    // @if $size==6 {
    //     flex-basis: 50%;
    // }

    // @else {
    //     flex-basis: 100%;
    // }

    @include respond-to(tablet) {
        flex: 0 0 percentage($size / $columns);
        max-width: percentage($size / $columns);
    }

    @include respond-to(desktop) {
        flex: 0 0 percentage($size / $columns);
        max-width: percentage($size / $columns);
    }
}

@mixin generate-col-offset($size, $columns: $grid-columns) {
    $num: $size / $columns;
    margin-left: if($num==0, 0, percentage($num));
}

// Resize
@mixin resizable($direction) {
    overflow: auto;
    resize: $direction;
}

// Clear fix
@mixin clearfix() {
    &::after {
        display: block;
        clear: both;
        content: "";
    }
}

// Line height
@mixin lineHeight($type) {
    @if ($type=="heading") {
        line-height: 1.125;
    }

    @else {
        line-height: 1.15;
    }
}

// px to rem
@mixin pxtorem($value) {
    font-size: ($value/$base-font-size-px) + rem;
}

// close icon
@mixin hcl-close-icon($size: 18, $bg-color: transparent, $fg-color: $black, $rounded: false) {
    width: #{$size}px;
    height: #{$size}px;
    position: relative;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    background-color: $bg-color;
    cursor: pointer;

    &:before,
    &:after {
        content: " ";
        position: absolute;
        width: 2px;
        background-color: lighten($fg-color, 20%);
    }

    @if $rounded {
        border-radius: 50%;

        &:before,
        &:after {
            height: #{round($size - 10)}px;
        }
    }

    @else {

        &:before,
        &:after {
            height: #{$size}px;
        }

    }

    &:before {
        transform: rotate(45deg);
    }

    &:after {
        transform: rotate(-45deg);
    }

    &:hover {

        &:before,
        &:after {
            background-color: lighten($fg-color, 0);
        }
    }
}