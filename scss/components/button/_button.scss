/******************************************************************
 * HCL Confidential
 *
 * Copyright HCL Technologies Ltd. 2019 All rights reserved.
 *
 *******************************************************************
 */
 

// remove the black theme ; blue will be default + primary
$baseKey: "background";
$theme: "primary";
$themes: ( "primary", "secondary", );
$colorMap: ( "primary": ( "background": var(--blue), "background-hover": var(--dark-secondary), "background-disabled": var(--primary-background-disabled), "font-color": var(--white)), "secondary": ( "background": var(--orange), "background-hover": var(--orange-secondary), "background-disabled": var(--orange-background-disabled), "font-color": var(--white)));
%button {
    text-align: center;
    cursor: pointer;
    line-height: 1rem;
    font-size: 0.875rem;
    border: 1px solid transparent;
    color: var(--white);
    background: var(--blue);
    margin: .5rem;
} // Buttons
button,
.#{$prefix}-btn,
.#{$prefix}-btn-primary,
.#{$prefix}-btn-secondary {
    @extend %button;
    padding: 0.625rem 1rem;
    height: 2.5rem;
}

@function getColor($name: "primary", $bkey: $baseKey) {
    $color: null;
    $colorList: map-get($colorMap, $name);
    @if $colorList {
        $color: map-get($colorList, $bkey);
    }
    @return $color;
}

@each $theme in $themes {
    .#{$prefix}-btn-#{$theme} {
        background: getColor($theme);
        border-color: currentColor;
        color: getColor($theme, "font-color");
        &:hover {
            background: getColor($theme, "background-hover");
            color: getColor($theme, "hover-fontcolor");
        }
        &:focus {
            background: getColor($theme, "background-hover");
        }
        &:disabled {
            background: getColor($theme, "background-disabled");
        }
        &.ghost {
            background: transparent;
            color: getColor($theme);
            border: 0;
            &:hover {
                background: getColor($theme, "background-hover");
                color: var(--white);
            }
            &:focus {
                background: getColor($theme, "background-hover");
                color: var(--white);
            }
            &:disabled {
                color: #8CD7FA;
            }
        }
        &.outline {
            background: transparent;
            color: getColor($theme);
            border: 2px solid currentColor;
            &:hover {
                background: getColor($theme, "background-hover");
                color: var(--white);
            }
            &:focus {
                background: getColor($theme, "background-hover");
                color: var(--white);
            }
            &:disabled {
                color: #8CD7FA;
                border: 2px solid currentColor;
            }
        }
    }
}

.sm {
    padding: 0.4375rem 1rem;
    height: 2rem;
}
