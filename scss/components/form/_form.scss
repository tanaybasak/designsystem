/******************************************************************
 * HCL Confidential
 *
 * Copyright HCL Technologies Ltd. 2019 All rights reserved.
 *
 *******************************************************************
 */

.#{$prefix}-form-group {
  margin-bottom: 1.5rem;
  display: flex;
  flex-direction: column;

  input.#{$prefix}-form-control[data-invalid='false'] ~ .#{$prefix}-error-msg,
  input.#{$prefix}-form-control:not([data-invalid]) ~ .#{$prefix}-error-msg {
    display: none;
  }

  & > .#{$prefix}-form-control {
    order: 3;
  }

  & > .#{$prefix}-textarea {
    order: 3;
  }

  input[type='password']::-ms-reveal,
  input[type='password']::-ms-clear {
    display: none;
  }
}

input.#{$prefix}-form-control[data-invalid='true'],
textarea.#{$prefix}-textarea[data-invalid='true'] {
  border-bottom: 1px solid var(--danger_border);
}

input.#{$prefix}-form-control[data-invalid='true']:focus,
textarea.#{$prefix}-textarea[data-invalid='true']:focus {
  box-shadow: inset -0.0625rem 0 0 transparent, inset 0 -0.25rem 0 transparent,
    inset 0.0625rem 0 0 transparent, 0 0.125rem 0 var(--danger_border);
}

input.#{$prefix}-form-control[data-invalid='true'] ~ .#{$prefix}-error-msg,
textarea.#{$prefix}-textarea[data-invalid='true'] ~ .#{$prefix}-error-msg {
  order: 4;
}

.#{$prefix}-helper-text {
  color: var(--default_text_low);

  margin-bottom: 0.5rem;
  @include getTypoMixinProperties($typoThemeMaps, 'text-component-descriptive');
  // font-size: 0.75rem;
  // line-height: getLineHeight(0.75rem);
}

label.#{$prefix}-label {
  color: var(--default_text);
  @include getTypoMixinProperties($typoThemeMaps, 'text-additional-label');
  // font-weight: $input-label-weight;
  margin-bottom: $label-margin-bottom;
}

@include getErrorMarkup('inputcontrol');

.#{$prefix}-form-control {
  @include getFormControl('inputcontrol');

  & ~ label.#{$prefix}-label {
    order: 1;
  }

  & ~ .#{$prefix}-helper-text {
    order: 2;
  }

  &[type='password'],
  input[type='password'] {
    padding-right: 0;
  }

  & ~ button.#{$prefix}-password-visibility,
  & ~ [data-component='password'] {
    position: relative;
    top: -2.5rem;
    right: 0;
    display: flex;
    justify-content: center;
    align-self: flex-end;
    align-items: center;
    order: 3;
    height: 2.5rem;
    width: 2.5rem;
    padding: 0;
    margin-bottom: -2.5rem;
    border: 0;
    background: none;
    cursor: pointer;
    outline: none;

    &:focus {
      outline: 1px solid var(--interactive_border);
    }

    &:disabled {
      opacity: var(--disabled_all);
      cursor: not-allowed;

      &:hover {
        background-color: transparent;
      }
    }

    svg.#{$prefix}-icon-visibility-on {
      display: none;
    }

    svg {
      fill: var(--input_icon);
    }

    &:hover {
      background-color: var(--interactive_bg_hover_high);
    }
  }
}

.#{$prefix}-textarea {
  @include getFormControl('inputcontrol');
  resize: vertical;
  padding: 0.6875rem 1rem;
  height: auto;

  &[data-invalid='false'] ~ .#{$prefix}-error-msg {
    color: inherit;
    display: none;
  }
}

//Checkbox
.#{$prefix}-checkbox-group,
.#{$prefix}-radio-group {
  display: flex;
  flex-direction: row;
}

.#{$prefix}-checkbox-item {
  position: relative;
  user-select: none;

  .#{$prefix}-checkbox {
    opacity: 0;
    width: 1.125rem;
    height: 1.125rem;
    top: 0;
    left: 0;
    position: absolute;

    &[disabled] ~ .#{$prefix}-checkbox-label {
      opacity: 0.5;
      cursor: not-allowed;
    }

    &:checked + .#{$prefix}-checkbox-label::before {
      border: none;
      background-color: var(--active_icon);
    }

    &:indeterminate + .#{$prefix}-checkbox-label::before {
      border: none;
      background-color: var(--active_icon);
    }

    &:checked + .#{$prefix}-checkbox-label::after {
      opacity: 1;
      transform: scale(1) rotate(-45deg);
    }

    &:indeterminate + .#{$prefix}-checkbox-label::after {
      border-left: 0;
      top: calc(50% - 0.0875rem);
      transform: scale(1) rotate(0deg);
    }

    &:focus + .#{$prefix}-checkbox-label::before {
      outline-offset: 2px;
      outline: 2px solid var(--interactive_border);
    }

    &:not(:disabled):hover:not(:checked):not(:indeterminate)
      + .#{$prefix}-checkbox-label::before {
      background-color: var(--interactive_bg_hover);
      box-shadow: inset 0 0px 0px var(--interactive_bg_hover),
        0 0 0 0.5rem var(--interactive_bg_hover);
    }
    &:not(:disabled):checked:hover + .#{$prefix}-checkbox-label::before {
      box-shadow: inset 0 0px 0px var(--interactive_bg_hover),
        0 0 0 0.5rem var(--interactive_bg_hover);
    }
    &:not(:disabled):indeterminate:hover + .#{$prefix}-checkbox-label::before {
      box-shadow: inset 0 0px 0px var(--interactive_bg_hover),
        0 0 0 0.5rem var(--interactive_bg_hover);
    }
  }

  .#{$prefix}-checkbox-label {
    @include getTypoMixinProperties(
      $typoThemeMaps,
      'text-component-body-short'
    );
    display: inline-block;
    cursor: pointer;
    margin-bottom: 0;
    padding-left: 2rem;
    position: relative;
    color: var(--default_text_high);

    &::before {
      box-sizing: border-box;
      content: '';
      position: absolute;
      margin-left: 0.25rem;
      left: 0;
      top: calc(50% - 0.5625rem);
      width: 1.125rem;
      height: 1.125rem;
      border: 1px solid var(--default_icon_high);
      background-color: var(--white);
    }

    &::after {
      box-sizing: border-box;
      content: '';
      width: 0.5625rem;
      height: 0.3125rem;
      background: none;
      border-left: 1px solid var(--white);
      border-bottom: 1px solid var(--white);
      transform: scale(0) rotate(-45deg);
      position: absolute;
      left: 0.5625rem;
      top: 50%;
      margin-top: -0.1875rem;
    }
  }
}

.#{$prefix}-checkbox-group {
  @include groupOption('checkbox');
}

// Radio
.#{$prefix}-radio-item {
  position: relative;
  display: flex;
  user-select: none;
}

.#{$prefix}-stack-vertical {
  flex-direction: column;

  .#{$prefix}-radio-item,
  .#{$prefix}-checkbox-item {
    margin-bottom: 1rem;
    margin-top: 0;

    &:first-of-type {
      margin-top: 0.5rem;
    }
  }
}

.#{$prefix}-radio {
  opacity: 0;
  position: absolute;

  &:focus + .#{$prefix}-radio-label::before {
    outline: 1px solid transparent;

    box-shadow: 0 0 0 2px var(--interactive_border);
  }

  &:disabled + .#{$prefix}-radio-label {
    opacity: var(--disabled_all);

    cursor: not-allowed;
  }

  &:checked + .#{$prefix}-radio-label::after {
    content: '';
    display: inline-block;
    position: absolute;
    top: 0.3125rem;
    left: 0.5625rem;
    width: 0.5rem;
    height: 0.5rem;
    border-radius: 50%;

    background-color: var(--active_icon);
  }

  &:checked + .#{$prefix}-radio-label::before {
    border: 2px solid var(--active_icon);
  }
}

.#{$prefix}-radio-label {
  @include getTypoMixinProperties(
    $typoThemeMaps,
    'text-component-body-short'
  );
  display: inline-block;
  cursor: pointer;
  margin-bottom: 0;
  position: relative;
  padding-left: 1.625rem;

  color: var(--default_text_high);

  &::before {
    content: '';
    display: inline-block;
    position: absolute;
    margin-left: 0.25rem;
    top: calc(50% - 0.5625rem);
    left: 0;
    border-radius: 50%;

    height: 1.125rem;
    width: 1.125rem;

    border: 2px solid var(--default_icon_high);
  }
}

.#{$prefix}-radio-group {
  @include groupOption('radio');
}

// Fieldset
.#{$prefix}-fieldset {
  margin-bottom: 2rem;
}

// Legend
.#{$prefix}-legend {
  @include getFontWeight('semibold');
  @include getInputColor('color-1', 'color');
  vertical-align: baseline;
  display: inline-block;
  margin-bottom: 0.5rem;
  font-size: 0.875rem;
}

input::-webkit-input-placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

textarea::-webkit-input-placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

input::-moz-placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

textarea::-moz-placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

input:-ms-input-placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

textarea:-ms-input-placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

input::placeholder {
  color: var(--input_text_low);
  opacity: 1;
}

textarea::placeholder {
  color: var(--input_text_low);
  opacity: 1;
}
