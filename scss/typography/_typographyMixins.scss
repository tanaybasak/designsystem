/******************************************************************
 * HCL Confidential
 *
 * Copyright HCL Technologies Ltd. 2019 All rights reserved.
 *
 *******************************************************************
 */

/* MIXINS SPECIFIC TO TYPOGRAPHY */

// Font weight
$fontWeights-map: (
  light: 300,
  regular: 400,
  semibold: 500,
  bold: 800
);

@mixin getFontWeight($fontWeight) {
  @if map-has-key($fontWeights-map, $fontWeight) {
    font-weight: map-get($fontWeights-map, $fontWeight);
  } @else {
    @warn '#{$fontWeight} is not defined in HCL design system!';
  }
}

// Font style
$textStyles-map: (
  normal: normal,
  italic: italic,
  oblique: oblique,
  initial: initial
);

@mixin getTextStyles($textTextStyle) {
  @if map-has-key($textStyles-map, $textTextStyle) {
    font-style: map-get($textStyles-map, $textTextStyle);
  } @else {
    @warn '#{$textTextStyle} is not defined in HCL design system!';
  }
}

// Text decoration style
$textDecorationStyle-map: (
  none: none,
  solid: solid,
  double: double,
  dotted: dotted,
  dashed: dashed,
  through: through
);

@mixin getTextDecorationStyle($textDecorStyle) {
  @if map-has-key($textDecorationStyle-map, $textDecorStyle) {
    text-decoration-style: map-get($textDecorationStyle-map, $textDecorStyle);
  } @else {
    @warn '#{$textDecorStyle} is not defined in HCL design system!';
  }
}

// Text decoration line
$textDecorationLine-map: (
  none: none,
  overline: overline,
  underline: underline,
  through: line-through,
  overunder: overline underline
);

@mixin getTextDecorationLine($textDecorLine) {
  @if map-has-key($textDecorationLine-map, $textDecorLine) {
    text-decoration-line: map-get($textDecorationLine-map, $textDecorLine);
  } @else {
    @warn '#{$textDecorLine} is not defined in HCL design system!';
  }
}

// Text transform
$textTransforms-map: (
  uppercase: uppercase,
  lowercase: lowercase,
  capitalize: capitalize
);

@mixin getTextTransform($textTransform) {
  @if map-has-key($textTransforms-map, $textTransform) {
    text-transform: map-get($textTransforms-map, $textTransform);
  } @else {
    @warn '#{$textTransform} is not defined in HCL design system!';
  }
}

// Text alignment
$textAlignments-map: (
  center: center,
  left: left,
  right: right,
  justify: justify
);

@mixin getTextAlignment($textAlignment) {
  @if map-has-key($textAlignments-map, $textAlignment) {
    text-align: map-get($textAlignments-map, $textAlignment);
  } @else {
    @warn '#{$textAlignment} is not defined in HCL design system!';
  }
}

// Font Sizes
$typeSizes-map: (
  'h1': 4.75rem,
  'h2': 3.375rem,
  'h3': 2.25rem,
  'h4': 1.75rem,
  'h5': 1.25rem,
  'h6': 1.125rem
);

@mixin getFontSizeAndLineHeightForHeadings($size) {
  @if map-has-key($typeSizes-map, $size) {
    font-size: map-get($typeSizes-map, $size);
    line-height: map-get($typeSizes-map, $size) * 1.25;
  } @else {
    @warn '#{$size} is not defined in HCL design system!';
  }
}

// White space
$whiteSpaces-map: (
  nowrap: nowrap,
  normal: normal,
  pre: pre
);

@mixin getWhiteSpace($whiteSpace) {
  @if map-has-key($whiteSpaces-map, $whiteSpace) {
    white-space: map-get($whiteSpaces-map, $whiteSpace);
  } @else {
    @warn '#{$whiteSpace} is not defined in HCL design system!';
  }
}

// Writing Mode
$writingModes-map: (
  htb: horizontal-tb,
  vrl: vertical-rl
);

@mixin getWritingMode($writingMode) {
  @if map-has-key($writingModes-map, $writingMode) {
    writing-mode: map-get($writingModes-map, $writingMode);
  } @else {
    @warn '#{$writingMode} is not defined in HCL design system!';
  }
}

// Typography utility classes
$typoThemeMaps: (
  'text-page-heading': (
    --page-heading --typeface-heading --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-page-heading-small': (
    --page-heading-small --typeface-heading --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-page-nav': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-page-subnav': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-page-descriptive': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-page-action': (
    --fontsize-small --typeface-regular --weight-medium --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-page-body': (
    --fontsize-large --typeface-regular --weight-regular --leading-default
      --kerning-default --capitalization-sentence
  ),
  'text-section-heading': (
    --fontsize-huge --typeface-heading --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-section-heading-small': (
    --fontsize-xlarge --typeface-heading --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-section-nav': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-section-subnav': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-section-body-short': (
    --fontsize-medium --typeface-regular --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-section-body-long': (
    --fontsize-medium --typeface-regular --weight-regular --leading-default
      --kerning-default --capitalization-sentence
  ),
  'text-section-descriptive': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-content-heading': (
    --fontsize-large --typeface-heading --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-content-heading-small': (
    --fontsize-medium --typeface-heading --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-content-nav': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-content-body-short': (
    --fontsize-default --typeface-regular --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-content-body-long': (
    --fontsize-default --typeface-regular --weight-regular --leading-default
      --kerning-default --capitalization-sentence
  ),
  'text-content-descriptive': (
    --fontsize-smaller --typeface-regular --weight-regular --leading-short
      --kerning-roomy --capitalization-sentence
  ),
  'text-content-meta': (
    --fontsize-smaller --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-content-numeric': (
    --fontsize-large --typeface-special --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-content-action': (
    --fontsize-small --typeface-regular --weight-medium --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-component-heading': (
    --fontsize-default --typeface-heading --weight-medium --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-component-heading-small': (
    --fontsize-small --typeface-heading --weight-medium --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-component-body-short': (
    --fontsize-small --typeface-regular --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-component-body-long': (
    --fontsize-small --typeface-regular --weight-regular --leading-default
      --kerning-comfortable --capitalization-sentence
  ),
  'text-component-descriptive': (
    --fontsize-smallest --typeface-regular --weight-regular --leading-short
      --kerning-roomy --capitalization-sentence
  ),
  'text-component-nav': (
    --fontsize-small --typeface-regular --weight-regular --leading-default
      --kerning-comfortable --capitalization-sentence
  ),
  'text-component-meta': (
    --fontsize-smallest --typeface-regular --weight-regular --leading-short
      --kerning-roomy --capitalization-sentence
  ),
  'text-component-numeric': (
    --fontsize-large --typeface-special --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-additional-code-small': (
    --fontsize-smallest --typeface-mono --weight-regular --leading-short
      --kerning-roomy --capitalization-sentence
  ),
  'text-additional-code-large': (
    --fontsize-small --typeface-mono --weight-regular --leading-default
      --kerning-roomy --capitalization-sentence
  ),
  'text-additional-quote': (
    --fontsize-large --typeface-regular --weight-regular --leading-short
      --kerning-default --capitalization-sentence
  ),
  'text-additional-active': (
    --fontsize-small --typeface-regular --weight-medium --leading-short
      --kerning-comfortable --capitalization-sentence
  ),
  'text-additional-label': (
    --fontsize-smaller --typeface-regular --weight-regular --leading-short
      --kerning-roomy --capitalization-sentence
  ),
  'text-additional-overline': (
    --fontsize-tiny --typeface-regular --weight-medium --leading-short
      --kerning-xxwide --capitalization-all-caps
  ),
  'text-additional-legal': (
    --fontsize-tiny --typeface-regular --weight-regular --leading-default
      --kerning-roomy --capitalization-sentence
  ),
  'text-additional-numeric': (
    --fontsize-large --typeface-special --weight-regular --leading-short
      --kerning-comfortable --capitalization-sentence
  )
);

@mixin getTypographyStyle($which) {
  font-size: var(nth($which, 1));
  font-family: var(nth($which, 2));
  font-weight: var(nth($which, 3));
  line-height: var(nth($which, 4));
  letter-spacing: var(nth($which, 5));
  text-transform: var(nth($which, 6));
}

@each $key, $value in $typoThemeMaps {
  .#{$key} {
    @include getTypographyStyle($value);
  }
}
